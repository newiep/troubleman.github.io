---
layout: post
title:  "算法之约瑟夫问题"
date:   2015-09-18 11:26
categories: 算法
tags: josephus
---

问题来源
--------
> 据说著名犹太历史学家 Josephus有过以下的故事：在罗马人占领乔塔帕特后，39 个犹太人与Josephus及他的朋友躲到一个洞中，39个犹太人决定宁愿死也不要被敌人抓到，于是决定了一个自杀方式，41个人排成一个圆圈，由第1个人开始报数，每报数到第3人该人就必须自杀，然后再由下一个重新报数，直到所有人都自杀身亡为止。

问题变种
--------
> n只猴子围坐成一个圈，按顺时针方向从1到n编号。然后从1号猴子开始沿顺时针方向从1开始报数，报到m的猴子出局，再从刚出局猴子的下一个位置重新开始报数，如此重复，直至剩下一个猴子，它就是大王。

算法实现
--------

{% highlight ruby %}
function josephus($n, $m)
{
    $mokey = range(1,$n);
    $flag = -1;
    $count = count($mokey);
    while ($count > 1) {
        $flag += $m % $count;
        $flag = $flag % $count;
        array_splice($mokey, $flag, 1);
        $flag--;
        $count--;
    }
    return $mokey[0];
}
{% endhighlight %}

简单说说我的思路：将n只猴子放到一个数组，定义一个标志位，根据每次报数和剩余猴子总数取余，根据当前的标志位加上取余结果求出，要踢掉的猴子所在的数组索引（使用array_splice，会重新生成索引），循环直到数组剩余一只猴子为止，返回当前剩余编号！
利用php数组函数配合标志位很简单解决改问题!,所以说php是世界最好的编程语言！^_^